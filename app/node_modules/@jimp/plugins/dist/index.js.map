{"version":3,"sources":["../src/index.js"],"names":["plugins","dither","resize","blit","rotate","color","print","blur","crop","normalize","invert","gaussian","flip","mask","scale","displace","contain","cover","jimpEvChange","initializedPlugins","map","pluginModule","plugin","class","constants","mergeDeep"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;AAEA,IAAMA,OAAO,GAAG,CACdC,qBADc,EAEdC,qBAFc,EAGdC,mBAHc,EAIdC,qBAJc,EAKdC,oBALc,EAMdC,oBANc,EAOdC,mBAPc,EAQdC,mBARc,EASdC,wBATc,EAUdC,qBAVc,EAWdC,uBAXc,EAYdC,mBAZc,EAadC,mBAbc,EAcdC,oBAdc,EAedC,uBAfc,EAgBdC,sBAhBc,EAiBdC,oBAjBc,CAAhB;;eAoBe,kBAAAC,YAAY,EAAI;AAC7B,MAAMC,kBAAkB,GAAGnB,OAAO,CAACoB,GAAR,CAAY,UAAAC,YAAY,EAAI;AACrD,QAAIC,MAAM,GAAGD,YAAY,CAACH,YAAD,CAAZ,IAA8B,EAA3C;;AAEA,QAAI,CAACI,MAAM,CAACC,KAAR,IAAiB,CAACD,MAAM,CAACE,SAA7B,EAAwC;AACtC;AACAF,MAAAA,MAAM,GAAG;AAAEC,QAAAA,KAAK,EAAED;AAAT,OAAT;AACD;;AAED,WAAOA,MAAP;AACD,GAT0B,CAA3B;AAWA,SAAOG,iDAAaN,kBAAb,EAAP;AACD,C","sourcesContent":["import { mergeDeep } from 'timm';\n\nimport dither from '@jimp/plugin-dither';\nimport resize from '@jimp/plugin-resize';\nimport blit from '@jimp/plugin-blit';\nimport rotate from '@jimp/plugin-rotate';\nimport color from '@jimp/plugin-color';\nimport print from '@jimp/plugin-print';\nimport blur from '@jimp/plugin-blur';\nimport crop from '@jimp/plugin-crop';\nimport normalize from '@jimp/plugin-normalize';\nimport invert from '@jimp/plugin-invert';\nimport gaussian from '@jimp/plugin-gaussian';\nimport flip from '@jimp/plugin-flip';\nimport mask from '@jimp/plugin-mask';\nimport scale from '@jimp/plugin-scale';\nimport displace from '@jimp/plugin-displace';\nimport contain from '@jimp/plugin-contain';\nimport cover from '@jimp/plugin-cover';\n\nconst plugins = [\n  dither,\n  resize,\n  blit,\n  rotate,\n  color,\n  print,\n  blur,\n  crop,\n  normalize,\n  invert,\n  gaussian,\n  flip,\n  mask,\n  scale,\n  displace,\n  contain,\n  cover\n];\n\nexport default jimpEvChange => {\n  const initializedPlugins = plugins.map(pluginModule => {\n    let plugin = pluginModule(jimpEvChange) || {};\n\n    if (!plugin.class && !plugin.constants) {\n      // Default to class function\n      plugin = { class: plugin };\n    }\n\n    return plugin;\n  });\n\n  return mergeDeep(...initializedPlugins);\n};\n"],"file":"index.js"}