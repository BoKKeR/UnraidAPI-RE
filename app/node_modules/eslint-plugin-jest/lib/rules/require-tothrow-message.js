'use strict';

const _require = require('./util'),
      argument = _require.argument,
      expectCase = _require.expectCase,
      getDocsUrl = _require.getDocsUrl,
      method = _require.method;

module.exports = {
  meta: {
    docs: {
      url: getDocsUrl(__filename)
    }
  },

  create(context) {
    return {
      CallExpression(node) {
        if (!expectCase(node)) {
          return;
        }

        const propertyName = method(node) && method(node).name; // Look for `toThrow` calls with no arguments.

        if (['toThrow', 'toThrowError'].includes(propertyName) && !argument(node)) {
          context.report({
            message: `Add an error message to {{ propertyName }}()`,
            data: {
              propertyName
            },
            node: method(node)
          });
        }
      }

    };
  }

};