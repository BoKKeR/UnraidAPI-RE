{"version":3,"sources":["../../../src/components/VBadge/VBadge.ts"],"names":[],"mappings":";AACA,OAAO,6CAAP;AAEA;AACA,OAAO,SAAP,MAAsB,wBAAtB;AACA,OAAO,UAAP,MAAuB,yBAAvB;AACA,SAAS,WAAW,mBAApB,QAA+C,2BAA/C;AACA,OAAO,cAAP,MAA2B,6BAA3B;AAIA,OAAO,MAAP,MAAmB,mBAAnB;AAEA,eAAe,OACb,SADa,EAEb,UAFa,EAGb,oBAAoB,CAAC,MAAD,EAAS,QAAT,CAApB,CAHa,EAIb;AACF;AALe,EAMb,MANa,CAMN;AACP,UAAM,SADC;AAGP,WAAO;AACL,eAAO;AACL,kBAAM,MADD;AAEL,qBAAS;AAFJ,SADF;AAKL,iBAAS,OALJ;AAML,oBAAY;AACV,kBAAM,MADI;AAEV,qBAAS;AAFC,SANP;AAUL,eAAO;AACL,qBAAS;AADJ;AAVF,KAHA;AAkBP,cAAU;AACR,eADQ,qBACD;AACL,mBAAO;AACL,mCAAmB,KAAK,MADnB;AAEL,iCAAiB,KAAK,IAFjB;AAGL,oCAAoB,KAAK;AAHpB,aAAP;AAKD;AAPO,KAlBH;AA4BP,UA5BO,kBA4BC,CA5BD,EA4BE;AACP,YAAM,QAAQ,KAAK,MAAL,CAAY,KAAZ,IAAqB,CAAC,EAAE,MAAF,EAAU,KAAK,kBAAL,CAAwB,KAAK,KAA7B,EAAoC;AAChF,yBAAa,gBADmE;AAEhF,mBAAO,KAAK,MAFoE;AAGhF,wBAAY,CAAC;AACX,sBAAM,MADK;AAEX,uBAAO,KAAK;AAFD,aAAD;AAHoE,SAApC,CAAV,EAOhC,KAAK,MAAL,CAAY,KAPoB,CAAD,CAAnC;AASA,eAAO,EAAE,MAAF,EAAU;AACf,yBAAa,SADE;AAEf,qBAAS,KAAK;AAFC,SAAV,EAGJ,CACD,KAAK,MAAL,CAAY,OADX,EAED,EAAE,YAAF,EAAgB;AACd,mBAAO;AACL,sBAAM,KAAK,UADN;AAEL,wBAAQ,KAAK,MAFR;AAGL,sBAAM,KAAK;AAHN;AADO,SAAhB,EAMG,KANH,CAFC,CAHI,CAAP;AAaD;AAnDM,CANM,CAAf","sourcesContent":["// Styles\nimport '../../stylus/components/_badges.styl'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Toggleable from '../../mixins/toggleable'\nimport { factory as PositionableFactory } from '../../mixins/positionable'\nimport Transitionable from '../../mixins/transitionable'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\nexport default mixins(\n  Colorable,\n  Toggleable,\n  PositionableFactory(['left', 'bottom']),\n  Transitionable\n/* @vue/component */\n).extend({\n  name: 'v-badge',\n\n  props: {\n    color: {\n      type: String,\n      default: 'primary'\n    },\n    overlap: Boolean,\n    transition: {\n      type: String,\n      default: 'fab-transition'\n    },\n    value: {\n      default: true\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-badge--bottom': this.bottom,\n        'v-badge--left': this.left,\n        'v-badge--overlap': this.overlap\n      }\n    }\n  },\n\n  render (h): VNode {\n    const badge = this.$slots.badge && [h('span', this.setBackgroundColor(this.color, {\n      staticClass: 'v-badge__badge',\n      attrs: this.$attrs,\n      directives: [{\n        name: 'show',\n        value: this.isActive\n      }]\n    }), this.$slots.badge)]\n\n    return h('span', {\n      staticClass: 'v-badge',\n      'class': this.classes\n    }, [\n      this.$slots.default,\n      h('transition', {\n        props: {\n          name: this.transition,\n          origin: this.origin,\n          mode: this.mode\n        }\n      }, badge)\n    ])\n  }\n})\n"],"sourceRoot":""}