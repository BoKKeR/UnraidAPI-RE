{"version":3,"sources":["../../../src/components/Vuetify/index.ts"],"names":[],"mappings":"AAAA,OAAO,MAAP,MAAmB,KAAnB;AAEA,OAAO,WAAP,MAAwB,sBAAxB;AACA,OAAO,UAAP,MAAuB,qBAAvB;AACA,OAAO,KAAP,MAAkB,gBAAlB;AACA,OAAO,KAAP,MAAkB,gBAAlB;AACA,OAAO,OAAP,MAAoB,kBAApB;AACA,OAAO,OAAP,MAAoB,eAApB;AACA,OAAO,IAAP,MAAiB,QAAjB;AAEA;AACA,SAAS,WAAT,EAAsB,YAAtB,QAA0C,oBAA1C;AAMA,IAAM,UAAyB;AAC7B,WAD6B,mBACpB,GADoB,EACN;AAAA,YAAT,IAAS,uEAAF,EAAE;;AACrB,YAAK,KAAa,SAAlB,EAA6B;AAC3B,aAAa,SAAb,GAAyB,IAAzB;AAEF,YAAI,WAAW,GAAf,EAAoB;AAClB,yBAAa,0JAAb;AACD;AAED,wBAAgB,GAAhB;AAEA,YAAM,OAAO,QAAQ,KAAK,IAAb,CAAb;AAEA,YAAI,SAAJ,CAAc,QAAd,GAAyB,IAAI,GAAJ,CAAQ;AAC/B,oBAAQ,CACN,WAAW,KAAK,UAAhB,CADM,CADuB;AAI/B,kBAAM;AACJ,wCADI;AAEJ,sBAAM,KAFF;AAGJ,uBAAO,MAAM,KAAK,QAAX,EAAqB,KAAK,KAA1B,CAHH;AAIJ,0BAJI;AAKJ,yBAAS,QAAQ,KAAK,OAAb,CALL;AAMJ,qBAAK,KAAK,GANN;AAOJ,uBAAO,MAAM,KAAK,KAAX;AAPH,aAJyB;AAa/B,qBAAS;AACP,0BADO;AAEP,mBAAG,KAAK,CAAL,CAAO,IAAP,CAAY,IAAZ;AAFI;AAbsB,SAAR,CAAzB;AAmBA,YAAI,KAAK,UAAT,EAAqB;AACnB,iBAAK,IAAM,IAAX,IAAmB,KAAK,UAAxB,EAAoC;AAClC,oBAAI,SAAJ,CAAc,IAAd,EAAoB,KAAK,UAAL,CAAgB,IAAhB,CAApB;AACD;AACF;AAED,SAAC,SAAS,kBAAT,CAA6B,UAA7B,EAAwE;AACvE,gBAAI,UAAJ,EAAgB;AACd,qBAAK,IAAM,GAAX,IAAkB,UAAlB,EAA8B;AAC5B,wBAAM,YAAY,WAAW,GAAX,CAAlB;AACA,wBAAI,aAAa,CAAC,mBAAmB,UAAU,uBAA7B,CAAlB,EAAyE;AACvE,4BAAI,SAAJ,CAAc,GAAd,EAAmB,SAAnB;AACD;AACF;AACD,uBAAO,IAAP;AACD;AACD,mBAAO,KAAP;AACD,SAXD,EAWG,KAAK,UAXR;AAYD,KAlD4B;;AAmD7B;AAnD6B,CAA/B;AAsDA,OAAM,SAAU,eAAV,CAA2B,GAA3B,EAAgD,WAAhD,EAAoE;AACxE,QAAM,SAAS,wBAAf;AAEA,QAAM,WAAW,OAAO,KAAP,CAAa,GAAb,EAAkB,CAAlB,EAAqB,GAArB,CAAyB;AAAA,eAAK,EAAE,OAAF,CAAU,KAAV,EAAiB,EAAjB,CAAL;AAAA,KAAzB,EAAoD,GAApD,CAAwD,MAAxD,CAAjB;AACA,QAAM,SAAS,IAAI,OAAJ,CAAY,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,EAA0B,GAA1B,CAA8B;AAAA,eAAK,SAAS,CAAT,EAAY,EAAZ,CAAL;AAAA,KAA9B,CAAf;AAEA;AACA,QAAM,SACJ,OAAO,CAAP,MAAc,SAAS,CAAT,CAAd,MAA6B;AAC5B,WAAO,CAAP,IAAY,SAAS,CAAT,CAAZ,IAA2B;AACzB,WAAO,CAAP,MAAc,SAAS,CAAT,CAAd,IAA6B,OAAO,CAAP,KAAa,SAAS,CAAT,CAF7C,CAE0D;AAF1D,KADF;AAMA,QAAI,CAAC,MAAL,EAAa;AACX,sDAA4C,MAA5C;AACD;AACF;AAED,eAAe,OAAf","sourcesContent":["import OurVue from 'vue'\n\nimport application from './mixins/application'\nimport breakpoint from './mixins/breakpoint'\nimport theme from './mixins/theme'\nimport icons from './mixins/icons'\nimport options from './mixins/options'\nimport genLang from './mixins/lang'\nimport goTo from './goTo'\n\n// Utils\nimport { consoleWarn, consoleError } from '../../util/console'\n\n// Types\nimport { VueConstructor } from 'vue/types'\nimport { Vuetify as VuetifyPlugin, VuetifyUseOptions } from 'vuetify/types'\n\nconst Vuetify: VuetifyPlugin = {\n  install (Vue, opts = {}) {\n    if ((this as any).installed) return\n    ;(this as any).installed = true\n\n    if (OurVue !== Vue) {\n      consoleError('Multiple instances of Vue detected\\nSee https://github.com/vuetifyjs/vuetify/issues/4068\\n\\nIf you\\'re seeing \"$attrs is readonly\", it\\'s caused by this')\n    }\n\n    checkVueVersion(Vue)\n\n    const lang = genLang(opts.lang)\n\n    Vue.prototype.$vuetify = new Vue({\n      mixins: [\n        breakpoint(opts.breakpoint)\n      ],\n      data: {\n        application,\n        dark: false,\n        icons: icons(opts.iconfont, opts.icons),\n        lang,\n        options: options(opts.options),\n        rtl: opts.rtl,\n        theme: theme(opts.theme)\n      },\n      methods: {\n        goTo,\n        t: lang.t.bind(lang)\n      }\n    })\n\n    if (opts.directives) {\n      for (const name in opts.directives) {\n        Vue.directive(name, opts.directives[name])\n      }\n    }\n\n    (function registerComponents (components: VuetifyUseOptions['components']) {\n      if (components) {\n        for (const key in components) {\n          const component = components[key]\n          if (component && !registerComponents(component.$_vuetify_subcomponents)) {\n            Vue.component(key, component as typeof Vue)\n          }\n        }\n        return true\n      }\n      return false\n    })(opts.components)\n  },\n  version: __VUETIFY_VERSION__\n}\n\nexport function checkVueVersion (Vue: VueConstructor, requiredVue?: string) {\n  const vueDep = requiredVue || __REQUIRED_VUE__\n\n  const required = vueDep.split('.', 3).map(v => v.replace(/\\D/g, '')).map(Number)\n  const actual = Vue.version.split('.', 3).map(n => parseInt(n, 10))\n\n  // Simple semver caret range comparison\n  const passes =\n    actual[0] === required[0] && // major matches\n    (actual[1] > required[1] || // minor is greater\n      (actual[1] === required[1] && actual[2] >= required[2]) // or minor is eq and patch is >=\n    )\n\n  if (!passes) {\n    consoleWarn(`Vuetify requires Vue version ${vueDep}`)\n  }\n}\n\nexport default Vuetify\n"],"sourceRoot":""}