{"version":3,"sources":["../../../src/components/VItemGroup/VItemGroup.ts"],"names":[],"mappings":";;;AACA,OAAO,iDAAP;AAIA,OAAO,SAAP,MAAsB,wBAAtB;AACA,OAAO,SAAP,MAAsB,wBAAtB;AAEA;AACA,OAAO,MAAP,MAAmB,mBAAnB;AACA,SAAS,WAAT,QAA4B,oBAA5B;AAOA,OAAO,IAAM,gBAAgB,OAC3B,SAD2B,EAE3B,SAF2B,EAG3B,MAH2B,CAGpB;AACP,UAAM,iBADC;AAGP,WAAO;AACL,qBAAa;AACX,kBAAM,MADK;AAEX,qBAAS;AAFE,SADR;AAKL,mBAAW,OALN;AAML,aAAK;AACH,kBAAM,CAAC,MAAD,EAAS,MAAT,CADH;AAEH,qBAAS;AAFN,SANA;AAUL,kBAAU;AAVL,KAHA;AAgBP,QAhBO,kBAgBH;AACF,eAAO;AACL;AACA;AACA;AACA,+BAAmB,KAAK,KAAL,KAAe,SAAf,GACf,KAAK,KADU,GAEf,KAAK,QAAL,GAAgB,EAAhB,GAAqB,SANpB;AAOL,mBAAO;AAPF,SAAP;AASD,KA1BM;;AA4BP,cAAU;AACR,eADQ,qBACD;AACL,gCACK,KAAK,YADV;AAGD,SALO;AAMR,qBANQ,2BAMK;AAAA;;AACX,mBAAO,KAAK,KAAL,CAAW,MAAX,CAAkB,UAAC,IAAD,EAAO,KAAP,EAAgB;AACvC,uBAAO,MAAK,YAAL,CAAkB,MAAK,QAAL,CAAc,IAAd,EAAoB,KAApB,CAAlB,CAAP;AACD,aAFM,CAAP;AAGD,SAVO;AAWR,sBAXQ,4BAWM;AACZ,mBAAO,MAAM,OAAN,CAAc,KAAK,aAAnB,IACH,KAAK,aADF,GAEH,CAAC,KAAK,aAAN,CAFJ;AAGD,SAfO;AAgBR,oBAhBQ,0BAgBI;AAAA;;AACV,gBAAI,CAAC,KAAK,QAAV,EAAoB;AAClB,uBAAO,UAAC,CAAD;AAAA,2BAAY,OAAK,aAAL,KAAuB,CAAnC;AAAA,iBAAP;AACD;AAED,gBAAM,gBAAgB,KAAK,aAA3B;AACA,gBAAI,MAAM,OAAN,CAAc,aAAd,CAAJ,EAAkC;AAChC,uBAAO,UAAC,CAAD;AAAA,2BAAY,cAAc,QAAd,CAAuB,CAAvB,CAAZ;AAAA,iBAAP;AACD;AAED,mBAAO;AAAA,uBAAM,KAAN;AAAA,aAAP;AACD;AA3BO,KA5BH;AA0DP,WAAO;AACL,qBADK,2BACQ;AACX;AACA,iBAAK,SAAL,CAAe,KAAK,gBAApB;AACD;AAJI,KA1DA;AAiEP,WAjEO,qBAiEA;AACL,YAAI,KAAK,QAAL,IAAiB,CAAC,MAAM,OAAN,CAAc,KAAK,aAAnB,CAAtB,EAAyD;AACvD,wBAAY,mEAAZ,EAAiF,IAAjF;AACD;AACF,KArEM;;AAuEP,aAAS;AACP,gBADO,oBACG,IADH,EAC4B,CAD5B,EACqC;AAC1C,mBAAO,KAAK,KAAL,IAAc,IAAd,IAAsB,KAAK,KAAL,KAAe,EAArC,GACH,CADG,GAEH,KAAK,KAFT;AAGD,SALM;AAMP,eANO,mBAME,IANF,EAM2B,KAN3B,EAMwC;AAC7C,iBAAK,mBAAL,CACE,KAAK,QAAL,CAAc,IAAd,EAAoB,KAApB,CADF;AAGD,SAVM;AAWP,gBAXO,oBAWG,IAXH,EAW0B;AAAA;;AAC/B,gBAAM,QAAQ,KAAK,KAAL,CAAW,IAAX,CAAgB,IAAhB,IAAwB,CAAtC;AAEA,iBAAK,GAAL,CAAS,QAAT,EAAmB;AAAA,uBAAM,OAAK,OAAL,CAAa,IAAb,EAAmB,KAAnB,CAAN;AAAA,aAAnB;AAEA;AACA;AACA,gBAAI,KAAK,SAAL,IAAkB,KAAK,iBAAL,IAA0B,IAAhD,EAAsD;AACpD,qBAAK,eAAL;AACD;AAED,iBAAK,UAAL,CAAgB,IAAhB,EAAsB,KAAtB;AACD,SAvBM;AAwBP,kBAxBO,sBAwBK,IAxBL,EAwB4B;AACjC,gBAAI,KAAK,YAAT,EAAuB;AAEvB,gBAAM,QAAQ,KAAK,KAAL,CAAW,OAAX,CAAmB,IAAnB,CAAd;AACA,gBAAM,QAAQ,KAAK,QAAL,CAAc,IAAd,EAAoB,KAApB,CAAd;AAEA,iBAAK,KAAL,CAAW,MAAX,CAAkB,KAAlB,EAAyB,CAAzB;AAEA,gBAAM,aAAa,KAAK,cAAL,CAAoB,OAApB,CAA4B,KAA5B,CAAnB;AAEA;AACA,gBAAI,aAAa,CAAjB,EAAoB;AAEpB;AACA,gBAAI,CAAC,KAAK,SAAV,EAAqB;AACnB,uBAAO,KAAK,mBAAL,CAAyB,KAAzB,CAAP;AACD;AAED;AACA,gBAAI,KAAK,QAAL,IAAiB,MAAM,OAAN,CAAc,KAAK,aAAnB,CAArB,EAAwD;AACtD,qBAAK,aAAL,GAAqB,KAAK,aAAL,CAAmB,MAAnB,CAA0B;AAAA,2BAAK,MAAM,KAAX;AAAA,iBAA1B,CAArB;AACD,aAFD,MAEO;AACL,qBAAK,aAAL,GAAqB,SAArB;AACD;AAED;AACA;AACA;AACA,gBAAI,CAAC,KAAK,aAAL,CAAmB,MAAxB,EAAgC;AAC9B,qBAAK,eAAL,CAAqB,IAArB;AACD;AACF,SAvDM;AAwDP,kBAxDO,sBAwDK,IAxDL,EAwD8B,KAxD9B,EAwD2C;AAChD,gBAAM,QAAQ,KAAK,QAAL,CAAc,IAAd,EAAoB,KAApB,CAAd;AAEA,iBAAK,QAAL,GAAgB,KAAK,YAAL,CAAkB,KAAlB,CAAhB;AACD,SA5DM;AA6DP,wBA7DO,8BA6DS;AACd,gBAAI,KAAK,SAAL,IACF,CAAC,KAAK,aAAL,CAAmB,MADtB,EAEE;AACA,uBAAO,KAAK,eAAL,EAAP;AACD;AAED;AACA;AACA;AACA,iBAAK,KAAL,CAAW,OAAX,CAAmB,KAAK,UAAxB;AACD,SAxEM;AAyEP,2BAzEO,+BAyEc,KAzEd,EAyEwB;AAC7B,iBAAK,QAAL,GACI,KAAK,cAAL,CAAoB,KAApB,CADJ,GAEI,KAAK,YAAL,CAAkB,KAAlB,CAFJ;AAGD,SA7EM;AA8EP,uBA9EO,2BA8EU,IA9EV,EA8EwB;AAC7B,gBAAI,CAAC,KAAK,KAAL,CAAW,MAAhB,EAAwB;AAExB,gBAAM,QAAQ,OAAO,KAAK,KAAL,CAAW,MAAX,GAAoB,CAA3B,GAA+B,CAA7C;AAEA,iBAAK,mBAAL,CACE,KAAK,QAAL,CAAc,KAAK,KAAL,CAAW,KAAX,CAAd,EAAiC,KAAjC,CADF;AAGD,SAtFM;AAuFP,sBAvFO,0BAuFS,KAvFT,EAuFmB;AACxB,gBAAM,eAAe,MAAM,OAAN,CAAc,KAAK,aAAnB,IACjB,KAAK,aADY,GAEjB,EAFJ;AAGA,gBAAM,gBAAgB,aAAa,KAAb,EAAtB;AACA,gBAAM,QAAQ,cAAc,SAAd,CAAwB;AAAA,uBAAO,QAAQ,KAAf;AAAA,aAAxB,CAAd;AAEA,gBACE,KAAK,SAAL;AACA;AACA,oBAAQ,CAAC,CAFT;AAGA;AACA,0BAAc,MAAd,GAAuB,CAAvB,GAA2B,CAL7B,EAME;AAEF;AACE;AACA,iBAAK,GAAL,IAAY,IAAZ;AACA;AACA,oBAAQ,CAFR;AAGA;AACA,0BAAc,MAAd,GAAuB,CAAvB,GAA2B,KAAK,GANlC,EAOE;AAEF,oBAAQ,CAAC,CAAT,GACI,cAAc,MAAd,CAAqB,KAArB,EAA4B,CAA5B,CADJ,GAEI,cAAc,IAAd,CAAmB,KAAnB,CAFJ;AAIA,iBAAK,aAAL,GAAqB,aAArB;AACD,SApHM;AAqHP,oBArHO,wBAqHO,KArHP,EAqHiB;AACtB,gBAAM,SAAS,UAAU,KAAK,aAA9B;AAEA,gBAAI,KAAK,SAAL,IAAkB,MAAtB,EAA8B;AAE9B,iBAAK,aAAL,GAAqB,SAAS,SAAT,GAAqB,KAA1C;AACD;AA3HM,KAvEF;AAqMP,UArMO,kBAqMC,CArMD,EAqME;AACP,eAAO,EAAE,KAAF,EAAS;AACd,yBAAa,cADC;AAEd,mBAAO,KAAK;AAFE,SAAT,EAGJ,KAAK,MAAL,CAAY,OAHR,CAAP;AAID;AA1MM,CAHoB,CAAtB;AAgNP,eAAe,cAAc,MAAd,CAAqB;AAClC,UAAM,cAD4B;AAGlC,WAHkC,qBAG3B;AACL,eAAO;AACL,uBAAW;AADN,SAAP;AAGD;AAPiC,CAArB,CAAf","sourcesContent":["// Styles\nimport '../../stylus/components/_item-group.styl'\n\n// Mixins\nimport Groupable from '../../mixins/groupable'\nimport Proxyable from '../../mixins/proxyable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue/types'\n\ntype GroupableInstance = InstanceType<typeof Groupable> & { value?: any }\n\nexport const BaseItemGroup = mixins(\n  Proxyable,\n  Themeable\n).extend({\n  name: 'base-item-group',\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-item--active'\n    },\n    mandatory: Boolean,\n    max: {\n      type: [Number, String],\n      default: null\n    },\n    multiple: Boolean\n  },\n\n  data () {\n    return {\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      internalLazyValue: this.value !== undefined\n        ? this.value\n        : this.multiple ? [] : undefined,\n      items: [] as GroupableInstance[]\n    }\n  },\n\n  computed: {\n    classes (): Record<string, boolean> {\n      return {\n        ...this.themeClasses\n      }\n    },\n    selectedItems (): GroupableInstance[] {\n      return this.items.filter((item, index) => {\n        return this.toggleMethod(this.getValue(item, index))\n      })\n    },\n    selectedValues (): any[] {\n      return Array.isArray(this.internalValue)\n        ? this.internalValue\n        : [this.internalValue]\n    },\n    toggleMethod (): (v: any) => boolean {\n      if (!this.multiple) {\n        return (v: any) => this.internalValue === v\n      }\n\n      const internalValue = this.internalValue\n      if (Array.isArray(internalValue)) {\n        return (v: any) => internalValue.includes(v)\n      }\n\n      return () => false\n    }\n  },\n\n  watch: {\n    internalValue () {\n      // https://github.com/vuetifyjs/vuetify/issues/5352\n      this.$nextTick(this.updateItemsState)\n    }\n  },\n\n  created () {\n    if (this.multiple && !Array.isArray(this.internalValue)) {\n      consoleWarn('Model must be bound to an array if the multiple property is true.', this)\n    }\n  },\n\n  methods: {\n    getValue (item: GroupableInstance, i: number): unknown {\n      return item.value == null || item.value === ''\n        ? i\n        : item.value\n    },\n    onClick (item: GroupableInstance, index: number) {\n      this.updateInternalValue(\n        this.getValue(item, index)\n      )\n    },\n    register (item: GroupableInstance) {\n      const index = this.items.push(item) - 1\n\n      item.$on('change', () => this.onClick(item, index))\n\n      // If no value provided and mandatory,\n      // assign first registered item\n      if (this.mandatory && this.internalLazyValue == null) {\n        this.updateMandatory()\n      }\n\n      this.updateItem(item, index)\n    },\n    unregister (item: GroupableInstance) {\n      if (this._isDestroyed) return\n\n      const index = this.items.indexOf(item)\n      const value = this.getValue(item, index)\n\n      this.items.splice(index, 1)\n\n      const valueIndex = this.selectedValues.indexOf(value)\n\n      // Items is not selected, do nothing\n      if (valueIndex < 0) return\n\n      // If not mandatory, use regular update process\n      if (!this.mandatory) {\n        return this.updateInternalValue(value)\n      }\n\n      // Remove the value\n      if (this.multiple && Array.isArray(this.internalValue)) {\n        this.internalValue = this.internalValue.filter(v => v !== value)\n      } else {\n        this.internalValue = undefined\n      }\n\n      // If mandatory and we have no selection\n      // add the last item as value\n      /* istanbul ignore else */\n      if (!this.selectedItems.length) {\n        this.updateMandatory(true)\n      }\n    },\n    updateItem (item: GroupableInstance, index: number) {\n      const value = this.getValue(item, index)\n\n      item.isActive = this.toggleMethod(value)\n    },\n    updateItemsState () {\n      if (this.mandatory &&\n        !this.selectedItems.length\n      ) {\n        return this.updateMandatory()\n      }\n\n      // TODO: Make this smarter so it\n      // doesn't have to iterate every\n      // child in an update\n      this.items.forEach(this.updateItem)\n    },\n    updateInternalValue (value: any) {\n      this.multiple\n        ? this.updateMultiple(value)\n        : this.updateSingle(value)\n    },\n    updateMandatory (last?: boolean) {\n      if (!this.items.length) return\n\n      const index = last ? this.items.length - 1 : 0\n\n      this.updateInternalValue(\n        this.getValue(this.items[index], index)\n      )\n    },\n    updateMultiple (value: any) {\n      const defaultValue = Array.isArray(this.internalValue)\n        ? this.internalValue\n        : []\n      const internalValue = defaultValue.slice()\n      const index = internalValue.findIndex(val => val === value)\n\n      if (\n        this.mandatory &&\n        // Item already exists\n        index > -1 &&\n        // value would be reduced below min\n        internalValue.length - 1 < 1\n      ) return\n\n      if (\n        // Max is set\n        this.max != null &&\n        // Item doesn't exist\n        index < 0 &&\n        // value would be increased above max\n        internalValue.length + 1 > this.max\n      ) return\n\n      index > -1\n        ? internalValue.splice(index, 1)\n        : internalValue.push(value)\n\n      this.internalValue = internalValue\n    },\n    updateSingle (value: any) {\n      const isSame = value === this.internalValue\n\n      if (this.mandatory && isSame) return\n\n      this.internalValue = isSame ? undefined : value\n    }\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-item-group',\n      class: this.classes\n    }, this.$slots.default)\n  }\n})\n\nexport default BaseItemGroup.extend({\n  name: 'v-item-group',\n\n  provide (): object {\n    return {\n      itemGroup: this\n    }\n  }\n})\n"],"sourceRoot":""}