{"version":3,"sources":["../../../../src/components/VSparkline/helpers/core.ts"],"names":[],"mappings":";;OAEM,SAAU,SAAV,CACJ,MADI,EAEJ,QAFI,EAGJ,IAHI,EAGQ;AAAA,QAEJ,IAFI,GAEuB,QAFvB,CAEJ,IAFI;AAAA,QAEE,IAFF,GAEuB,QAFvB,CAEE,IAFF;AAAA,QAEQ,IAFR,GAEuB,QAFvB,CAEQ,IAFR;AAAA,QAEc,IAFd,GAEuB,QAFvB,CAEc,IAFd;;AAGZ,QAAM,mBAAmB,OAAO,GAAP,CACvB;AAAA,eAAS,OAAO,IAAP,KAAgB,QAAhB,GAA2B,IAA3B,GAAkC,KAAK,KAAhD;AAAA,KADuB,CAAzB;AAGA,QAAM,cAAc,iBAAiB,MAArC;AACA,QAAM,WAAW,KAAK,GAAL,gCAAY,gBAAZ,KAAgC,CAAjD;AACA,QAAI,WAAW,KAAK,GAAL,gCAAY,gBAAZ,EAAf;AAEA,QAAI,QAAJ,EAAc,YAAY,CAAZ;AACd,QAAI,QAAQ,CAAC,OAAO,IAAR,KAAiB,cAAc,CAA/B,CAAZ;AACA,QAAI,SAAS,KAAb,EAAoB,QAAQ,OAAO,WAAf;AACpB,QAAM,QAAQ,CAAC,OAAO,IAAR,KAAiB,WAAW,QAA5B,CAAd;AAEA,WAAO,iBAAiB,GAAjB,CAAqB,UAAC,KAAD,EAAQ,KAAR,EAAiB;AAC3C,eAAO;AACL,eAAG,OAAO,QAAQ,KADb;AAEL,eACE,OACA,CAAC,QAAQ,QAAT,IAAqB,KADrB,GAEA,EAAE,UAAU,cAAc,CAA1B,IAA+B,OAF/B,GAGA,EAAE,UAAU,CAAZ,IAAiB,OANd;AAOL;AAPK,SAAP;AASD,KAVM,CAAP;AAWD","sourcesContent":["import { SparklineItem, Boundary, Point } from '../VSparkline'\n\nexport function genPoints (\n  points: SparklineItem[],\n  boundary: Boundary,\n  type: String\n): Point[] {\n  const { minX, minY, maxX, maxY } = boundary\n  const normalisedPoints = points.map(\n    item => (typeof item === 'number' ? item : item.value)\n  )\n  const totalPoints = normalisedPoints.length\n  const maxValue = Math.max(...normalisedPoints) + 1\n  let minValue = Math.min(...normalisedPoints)\n\n  if (minValue) minValue -= 1\n  let gridX = (maxX - minX) / (totalPoints - 1)\n  if (type === 'bar') gridX = maxX / totalPoints\n  const gridY = (maxY - minY) / (maxValue - minValue)\n\n  return normalisedPoints.map((value, index) => {\n    return {\n      x: minX + index * gridX,\n      y:\n        maxY -\n        (value - minValue) * gridY +\n        +(index === totalPoints - 1) * 0.00001 -\n        +(index === 0) * 0.00001,\n      value\n    }\n  })\n}\n"],"sourceRoot":""}