{"version":3,"sources":["../../../../src/components/VCalendar/util/props.ts"],"names":[],"mappings":";;;;;;;;kBAGe;AACb,UAAM;AACJ,eAAO;AACL,kBAAM,MADD;AAEL,sBAAU,4BAFL;AAGL,qBAAS;AAAA,uBAAM,0BAAU,IAAI,IAAJ,EAAV,EAAsB,IAA5B;AAAA;AAHJ,SADH;AAMJ,aAAK;AACH,kBAAM,MADH;AAEH,sBAAU,4BAFP;AAGH,qBAAS;AAHN,SAND;AAWJ,kBAAU;AACR,kBAAM,KADE;AAER,qBAAS;AAAA,uBAAM,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAN;AAAA;AAFD,SAXN;AAeJ,oBAAY;AACV,kBAAM,OADI;AAEV,qBAAS;AAFC,SAfR;AAmBJ,uBAAe;AACb,kBAAM,OADO;AAEb,qBAAS;AAFI,SAnBX;AAuBJ,uBAAe;AACb,kBAAM,QADO;AAEb,qBAAS;AAFI,SAvBX;AA2BJ,mBAAW;AACT,kBAAM,QADG;AAET,qBAAS;AAFA,SA3BP;AA+BJ,gBAAQ;AACN,kBAAM,MADA;AAEN,qBAAS;AAFH;AA/BJ,KADO;AAqCb,eAAW;AACT,iBAAS;AACP,kBAAM,MADC;AAEP,qBAAS;AAFF,SADA;AAKT,wBAAgB;AACd,kBAAM,OADQ;AAEd,qBAAS;AAFK,SALP;AAST,wBAAgB;AACd,kBAAM,CAAC,MAAD,EAAS,MAAT,CADQ;AAEd,qBAAS,EAFK;AAGd,sBAAU;AAHI,SATP;AAcT,yBAAiB;AACf,kBAAM,CAAC,MAAD,EAAS,MAAT,CADS;AAEf,qBAAS,EAFM;AAGf,sBAAU;AAHK,SAdR;AAmBT,uBAAe;AACb,kBAAM,CAAC,MAAD,EAAS,MAAT,CADO;AAEb,qBAAS,CAFI;AAGb,sBAAU;AAHG,SAnBN;AAwBT,uBAAe;AACb,kBAAM,CAAC,MAAD,EAAS,MAAT,CADO;AAEb,qBAAS,EAFI;AAGb,sBAAU;AAHG,SAxBN;AA6BT,wBAAgB;AACd,kBAAM,QADQ;AAEd,qBAAS;AAFK,SA7BP;AAiCT,uBAAe;AACb,kBAAM,QADO;AAEb,qBAAS;AAFI,SAjCN;AAqCT,2BAAmB;AACjB,kBAAM,QADW;AAEjB,qBAAS;AAFQ;AArCV,KArCE;AA+Eb,WAAO;AACL,kBAAU;AACR,sBAAU,cADF;AAER,qBAAS;AAFD,SADL;AAKL,qBAAa;AACX,kBAAM,OADK;AAEX,qBAAS;AAFE,SALR;AASL,0BAAkB;AAChB,kBAAM,OADU;AAEhB,qBAAS;AAFO,SATb;AAaL,qBAAa;AACX,kBAAM,QADK;AAEX,qBAAS;AAFE;AAbR,KA/EM;AAiGb,cAAU;AACR,cAAM;AACJ,kBAAM,MADF;AAEJ,qBAAS;AAFL,SADE;AAKR,eAAO;AACL,kBAAM,MADD;AAEL,sBAAU;AAFL;AALC;AAjGG,C;;AA6Gf,SAAS,cAAT,CAAyB,KAAzB,EAAmC;AACjC,WAAO,SAAS,SAAS,KAAT,CAAT,CAAP;AACD","sourcesContent":["\nimport { validateTimestamp, parseDate } from './timestamp'\n\nexport default {\n  base: {\n    start: {\n      type: String,\n      validate: validateTimestamp,\n      default: () => parseDate(new Date()).date\n    },\n    end: {\n      type: String,\n      validate: validateTimestamp,\n      default: '0000-00-00'\n    },\n    weekdays: {\n      type: Array as () => number[],\n      default: () => [0, 1, 2, 3, 4, 5, 6]\n    },\n    hideHeader: {\n      type: Boolean,\n      default: false\n    },\n    shortWeekdays: {\n      type: Boolean,\n      default: true\n    },\n    weekdayFormat: {\n      type: Function, // VTimestampFormatter,\n      default: null\n    },\n    dayFormat: {\n      type: Function, // VTimestampFormatter,\n      default: null\n    },\n    locale: {\n      type: String,\n      default: 'en-us'\n    }\n  },\n  intervals: {\n    maxDays: {\n      type: Number,\n      default: 7\n    },\n    shortIntervals: {\n      type: Boolean,\n      default: true\n    },\n    intervalHeight: {\n      type: [Number, String],\n      default: 40,\n      validate: validateNumber\n    },\n    intervalMinutes: {\n      type: [Number, String],\n      default: 60,\n      validate: validateNumber\n    },\n    firstInterval: {\n      type: [Number, String],\n      default: 0,\n      validate: validateNumber\n    },\n    intervalCount: {\n      type: [Number, String],\n      default: 24,\n      validate: validateNumber\n    },\n    intervalFormat: {\n      type: Function, // VTimestampFormatter,\n      default: null\n    },\n    intervalStyle: {\n      type: Function, // (interval: VTimestamp): object\n      default: null\n    },\n    showIntervalLabel: {\n      type: Function, // (interval: VTimestamp): boolean\n      default: null\n    }\n  },\n  weeks: {\n    minWeeks: {\n      validate: validateNumber,\n      default: 1\n    },\n    shortMonths: {\n      type: Boolean,\n      default: true\n    },\n    showMonthOnFirst: {\n      type: Boolean,\n      default: true\n    },\n    monthFormat: {\n      type: Function, // VTimestampFormatter,\n      default: null\n    }\n  },\n  calendar: {\n    type: {\n      type: String,\n      default: 'month'\n    },\n    value: {\n      type: String,\n      validate: validateTimestamp\n    }\n  }\n}\n\nfunction validateNumber (input: any): boolean {\n  return isFinite(parseInt(input))\n}\n"],"sourceRoot":""}