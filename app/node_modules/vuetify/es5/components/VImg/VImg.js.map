{"version":3,"sources":["../../../src/components/VImg/VImg.ts"],"names":[],"mappings":"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","sourcesContent":["import '../../stylus/components/_images.styl'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\n// Components\nimport VResponsive from '../VResponsive'\n\n// Utils\nimport { consoleError, consoleWarn } from '../../util/console'\n\n// not intended for public use, this is passed in by vuetify-loader\nexport interface srcObject {\n  src: string\n  srcset?: string\n  lazySrc: string\n  aspect: number\n}\n\n/* @vue/component */\nexport default VResponsive.extend({\n  name: 'v-img',\n\n  props: {\n    alt: String,\n    contain: Boolean,\n    src: {\n      type: [String, Object],\n      default: ''\n    } as PropValidator<string | srcObject>,\n    gradient: String,\n    lazySrc: String,\n    srcset: String,\n    sizes: String,\n    position: {\n      type: String,\n      default: 'center center'\n    },\n    transition: {\n      type: [Boolean, String],\n      default: 'fade-transition'\n    }\n  },\n\n  data () {\n    return {\n      currentSrc: '', // Set from srcset\n      image: null as HTMLImageElement | null,\n      isLoading: true,\n      calculatedAspectRatio: undefined as number | undefined\n    }\n  },\n\n  computed: {\n    computedAspectRatio (): number {\n      return this.normalisedSrc.aspect\n    },\n    normalisedSrc (): srcObject {\n      return typeof this.src === 'string'\n        ? {\n          src: this.src,\n          srcset: this.srcset,\n          lazySrc: this.lazySrc,\n          aspect: Number(this.aspectRatio || this.calculatedAspectRatio)\n        }\n        : {\n          src: this.src.src,\n          srcset: this.srcset || this.src.srcset,\n          lazySrc: this.lazySrc || this.src.lazySrc,\n          aspect: Number(this.aspectRatio || this.src.aspect || this.calculatedAspectRatio)\n        }\n    },\n    __cachedImage (): VNode | [] {\n      if (!(this.normalisedSrc.src || this.normalisedSrc.lazySrc)) return []\n\n      const backgroundImage: string[] = []\n      const src = this.isLoading ? this.normalisedSrc.lazySrc : this.currentSrc\n\n      if (this.gradient) backgroundImage.push(`linear-gradient(${this.gradient})`)\n      if (src) backgroundImage.push(`url(\"${src}\")`)\n\n      const image = this.$createElement('div', {\n        staticClass: 'v-image__image',\n        class: {\n          'v-image__image--preload': this.isLoading,\n          'v-image__image--contain': this.contain,\n          'v-image__image--cover': !this.contain\n        },\n        style: {\n          backgroundImage: backgroundImage.join(', '),\n          backgroundPosition: this.position\n        },\n        key: +this.isLoading\n      })\n\n      if (!this.transition) return image\n\n      return this.$createElement('transition', {\n        attrs: {\n          name: this.transition,\n          mode: 'in-out'\n        }\n      }, [image])\n    }\n  },\n\n  watch: {\n    src () {\n      if (!this.isLoading) this.init()\n      else this.loadImage()\n    },\n    '$vuetify.breakpoint.width': 'getSrc'\n  },\n\n  mounted () {\n    this.init()\n  },\n\n  methods: {\n    init () {\n      if (this.normalisedSrc.lazySrc) {\n        const lazyImg = new Image()\n        lazyImg.src = this.normalisedSrc.lazySrc\n        this.pollForSize(lazyImg, null)\n      }\n      /* istanbul ignore else */\n      if (this.normalisedSrc.src) this.loadImage()\n    },\n    onLoad () {\n      this.getSrc()\n      this.isLoading = false\n      this.$emit('load', this.src)\n    },\n    onError () {\n      consoleError(\n        `Image load failed\\n\\n` +\n        `src: ${this.normalisedSrc.src}`,\n        this\n      )\n      this.$emit('error', this.src)\n    },\n    getSrc () {\n      /* istanbul ignore else */\n      if (this.image) this.currentSrc = this.image.currentSrc || this.image.src\n    },\n    loadImage () {\n      const image = new Image()\n      this.image = image\n\n      image.onload = () => {\n        /* istanbul ignore if */\n        if (image.decode) {\n          image.decode().catch((err: DOMException) => {\n            consoleWarn(\n              `Failed to decode image, trying to render anyway\\n\\n` +\n              `src: ${this.normalisedSrc.src}` +\n              (err.message ? `\\nOriginal error: ${err.message}` : ''),\n              this\n            )\n          }).then(this.onLoad)\n        } else {\n          this.onLoad()\n        }\n      }\n      image.onerror = this.onError\n\n      image.src = this.normalisedSrc.src\n      this.sizes && (image.sizes = this.sizes)\n      this.normalisedSrc.srcset && (image.srcset = this.normalisedSrc.srcset)\n\n      this.aspectRatio || this.pollForSize(image)\n      this.getSrc()\n    },\n    pollForSize (img: HTMLImageElement, timeout: number | null = 100) {\n      const poll = () => {\n        const { naturalHeight, naturalWidth } = img\n\n        if (naturalHeight || naturalWidth) {\n          this.calculatedAspectRatio = naturalWidth / naturalHeight\n        } else {\n          timeout != null && setTimeout(poll, timeout)\n        }\n      }\n\n      poll()\n    },\n    __genPlaceholder (): VNode | void {\n      if (this.$slots.placeholder) {\n        const placeholder = this.isLoading\n          ? [this.$createElement('div', {\n            staticClass: 'v-image__placeholder'\n          }, this.$slots.placeholder)]\n          : []\n\n        if (!this.transition) return placeholder[0]\n\n        return this.$createElement('transition', {\n          attrs: { name: this.transition }\n        }, placeholder)\n      }\n    }\n  },\n\n  render (h): VNode {\n    const node = VResponsive.options.render.call(this, h)\n\n    node.data!.staticClass += ' v-image'\n\n    node.data!.attrs = {\n      role: this.alt ? 'img' : undefined,\n      'aria-label': this.alt\n    }\n\n    node.children = [\n      this.__cachedSizer,\n      this.__cachedImage,\n      this.__genPlaceholder(),\n      this.genContent()\n    ] as VNode[]\n\n    return h(node.tag, node.data, node.children)\n  }\n})\n"],"sourceRoot":""}