{"version":3,"sources":["../../../../src/components/Vuetify/goTo/easing-patterns.ts"],"names":[],"mappings":";;;;;;AAGO,IAAM,0BAAS,SAAT,MAAS,CAAC,CAAD;AAAA,SAAe,CAAf;AAAA,CAAf;AACP;AACO,IAAM,kCAAa,SAAb,UAAa,CAAC,CAAD;AAAA,SAAe,IAAI,CAAnB;AAAA,CAAnB;AACP;AACO,IAAM,oCAAc,SAAd,WAAc,CAAC,CAAD;AAAA,SAAe,KAAK,IAAI,CAAT,CAAf;AAAA,CAApB;AACP;AACO,IAAM,wCAAgB,SAAhB,aAAgB,CAAC,CAAD;AAAA,SAAgB,IAAI,GAAJ,GAAU,IAAI,CAAJ,GAAQ,CAAlB,GAAsB,CAAC,CAAD,GAAK,CAAC,IAAI,IAAI,CAAT,IAAc,CAAzD;AAAA,CAAtB;AACP;AACO,IAAM,oCAAc,SAAd,WAAc,CAAC,CAAD;AAAA,SAAe,IAAI,CAAJ,GAAQ,CAAvB;AAAA,CAApB;AACP;AACO,IAAM,sCAAe,SAAf,YAAe,CAAC,CAAD;AAAA,SAAe,EAAE,CAAF,GAAM,CAAN,GAAU,CAAV,GAAc,CAA7B;AAAA,CAArB;AACP;AACO,IAAM,0CAAiB,SAAjB,cAAiB,CAAC,CAAD;AAAA,SAAe,IAAI,GAAJ,GAAU,IAAI,CAAJ,GAAQ,CAAR,GAAY,CAAtB,GAA0B,CAAC,IAAI,CAAL,KAAW,IAAI,CAAJ,GAAQ,CAAnB,KAAyB,IAAI,CAAJ,GAAQ,CAAjC,IAAsC,CAA/E;AAAA,CAAvB;AACP;AACO,IAAM,oCAAc,SAAd,WAAc,CAAC,CAAD;AAAA,SAAe,IAAI,CAAJ,GAAQ,CAAR,GAAY,CAA3B;AAAA,CAApB;AACP;AACO,IAAM,sCAAe,SAAf,YAAe,CAAC,CAAD;AAAA,SAAe,IAAI,EAAE,CAAF,GAAM,CAAN,GAAU,CAAV,GAAc,CAAjC;AAAA,CAArB;AACP;AACO,IAAM,0CAAiB,SAAjB,cAAiB,CAAC,CAAD;AAAA,SAAgB,IAAI,GAAJ,GAAU,IAAI,CAAJ,GAAQ,CAAR,GAAY,CAAZ,GAAgB,CAA1B,GAA8B,IAAI,IAAI,EAAE,CAAN,GAAU,CAAV,GAAc,CAAd,GAAkB,CAApE;AAAA,CAAvB;AACP;AACO,IAAM,oCAAc,SAAd,WAAc,CAAC,CAAD;AAAA,SAAe,IAAI,CAAJ,GAAQ,CAAR,GAAY,CAAZ,GAAgB,CAA/B;AAAA,CAApB;AACP;AACO,IAAM,sCAAe,SAAf,YAAe,CAAC,CAAD;AAAA,SAAe,IAAI,EAAE,CAAF,GAAM,CAAN,GAAU,CAAV,GAAc,CAAd,GAAkB,CAArC;AAAA,CAArB;AACP;AACO,IAAM,0CAAiB,SAAjB,cAAiB,CAAC,CAAD;AAAA,SAAe,IAAI,GAAJ,GAAU,KAAK,CAAL,GAAS,CAAT,GAAa,CAAb,GAAiB,CAAjB,GAAqB,CAA/B,GAAmC,IAAI,KAAK,EAAE,CAAP,GAAW,CAAX,GAAe,CAAf,GAAmB,CAAnB,GAAuB,CAA7E;AAAA,CAAvB","sourcesContent":["export type EasingFunction = (t: number) => number\n\n// linear\nexport const linear = (t: number) => t\n// accelerating from zero velocity\nexport const easeInQuad = (t: number) => t * t\n// decelerating to zero velocity\nexport const easeOutQuad = (t: number) => t * (2 - t)\n// acceleration until halfway, then deceleration\nexport const easeInOutQuad = (t: number) => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t)\n// accelerating from zero velocity\nexport const easeInCubic = (t: number) => t * t * t\n// decelerating to zero velocity\nexport const easeOutCubic = (t: number) => --t * t * t + 1\n// acceleration until halfway, then deceleration\nexport const easeInOutCubic = (t: number) => t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1\n// accelerating from zero velocity\nexport const easeInQuart = (t: number) => t * t * t * t\n// decelerating to zero velocity\nexport const easeOutQuart = (t: number) => 1 - --t * t * t * t\n// acceleration until halfway, then deceleration\nexport const easeInOutQuart = (t: number) => (t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t)\n// accelerating from zero velocity\nexport const easeInQuint = (t: number) => t * t * t * t * t\n// decelerating to zero velocity\nexport const easeOutQuint = (t: number) => 1 + --t * t * t * t * t\n// acceleration until halfway, then deceleration\nexport const easeInOutQuint = (t: number) => t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t\n"],"sourceRoot":""}