{"version":3,"sources":["../../src/util/console.ts"],"names":[],"mappings":"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","sourcesContent":["function createMessage (message: string, vm?: any, parent?: any): string | void {\n  if (parent) {\n    vm = {\n      _isVue: true,\n      $parent: parent,\n      $options: vm\n    }\n  }\n\n  if (vm) {\n    // Only show each message once per instance\n    vm.$_alreadyWarned = vm.$_alreadyWarned || []\n    if (vm.$_alreadyWarned.includes(message)) return\n    vm.$_alreadyWarned.push(message)\n  }\n\n  return `[Vuetify] ${message}` + (\n    vm ? generateComponentTrace(vm) : ''\n  )\n}\n\nexport function consoleInfo (message: string, vm?: any, parent?: any): void {\n  const newMessage = createMessage(message, vm, parent)\n  newMessage != null && console.info(newMessage)\n}\n\nexport function consoleWarn (message: string, vm?: any, parent?: any): void {\n  const newMessage = createMessage(message, vm, parent)\n  newMessage != null && console.warn(newMessage)\n}\n\nexport function consoleError (message: string, vm?: any, parent?: any): void {\n  const newMessage = createMessage(message, vm, parent)\n  newMessage != null && console.error(newMessage)\n}\n\nexport function deprecate (original: string, replacement: string, vm?: any, parent?: any) {\n  consoleWarn(`'${original}' is deprecated, use '${replacement}' instead`, vm, parent)\n}\n\n/**\n * Shamelessly stolen from vuejs/vue/blob/dev/src/core/util/debug.js\n */\n\nconst classifyRE = /(?:^|[-_])(\\w)/g\nconst classify = (str: string) => str\n  .replace(classifyRE, c => c.toUpperCase())\n  .replace(/[-_]/g, '')\n\nfunction formatComponentName (vm: any, includeFile?: boolean): string {\n  if (vm.$root === vm) {\n    return '<Root>'\n  }\n  const options = typeof vm === 'function' && vm.cid != null\n    ? vm.options\n    : vm._isVue\n      ? vm.$options || vm.constructor.options\n      : vm || {}\n  let name = options.name || options._componentTag\n  const file = options.__file\n  if (!name && file) {\n    const match = file.match(/([^/\\\\]+)\\.vue$/)\n    name = match && match[1]\n  }\n\n  return (\n    (name ? `<${classify(name)}>` : `<Anonymous>`) +\n    (file && includeFile !== false ? ` at ${file}` : '')\n  )\n}\n\nfunction generateComponentTrace (vm: any): string {\n  if (vm._isVue && vm.$parent) {\n    const tree = []\n    let currentRecursiveSequence = 0\n    while (vm) {\n      if (tree.length > 0) {\n        const last: any = tree[tree.length - 1]\n        if (last.constructor === vm.constructor) {\n          currentRecursiveSequence++\n          vm = vm.$parent\n          continue\n        } else if (currentRecursiveSequence > 0) {\n          tree[tree.length - 1] = [last, currentRecursiveSequence]\n          currentRecursiveSequence = 0\n        }\n      }\n      tree.push(vm)\n      vm = vm.$parent\n    }\n    return '\\n\\nfound in\\n\\n' + tree\n      .map((vm, i) => `${\n        i === 0 ? '---> ' : ' '.repeat(5 + i * 2)\n      }${\n        Array.isArray(vm)\n          ? `${formatComponentName(vm[0])}... (${vm[1]} recursive calls)`\n          : formatComponentName(vm)\n      }`)\n      .join('\\n')\n  } else {\n    return `\\n\\n(found in ${formatComponentName(vm)})`\n  }\n}\n"],"sourceRoot":""}